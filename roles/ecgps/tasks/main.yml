---
# Tasks for installing and configuring eClinicalgps.

- name: Pull the ecgps app from the github repo.
  git: repo=$project_repo dest=$project_root/ecgps version={{branch}}
  tags: deploy

- name: Upgrade the virtualenv with dev requirements.
  pip: requirements=${project_root}/ecgps/deps/development.txt virtualenv=${env_dir}
  only_if: "'$machine' == 'dev'"
  tags: deploy, dev

- name: Upgrade the virtualenv with prod requirements.
  pip: requirements=${project_root}/ecgps/deps/production.txt virtualenv=${env_dir}
  tags: deploy

- name: Delete Root SSH Directory.
  file: state=directory path=~/.ssh state=absent
  only_if: "'$machine' == 'dev'"
  tags: provision

- name: Check if local_settings.py.j2 exists
  shell: "[ -f ${project_root}/ecgps/local_settings.py ] && echo True || echo False"
  register: no_local_settings
  only_if: "'$machine' == 'dev'"
  tags: deploy, dev

- name: Copy over local_settings if one is needed
  template: src=local_settings.py.j2 dest=${project_root}/ecgps/local_settings.py
  only_if: "${no_local_settings}"
  tags: deploy, dev

- name: check if the load prod db script exists
  shell: "[ -f ${project_root}/load_sanitized_data.sh ] && echo False || echo True"
  register: load_prod
  tags: deploy, dev

- name: create .bash_profile
  template: src=load_sanitized_data.sh.j2 dest=${project_root}/load_sanitized_data.sh mode=0700
  only_if: "'$machine' == 'dev'"
  tags: provision, dev

- name: load postgres database with sanitized prod data...could take a while
  command: "${project_root}/load_sanitized_data.sh"
  only_if: "${load_prod}"
  ignore_errors: True
  tags: deploy, dev

- name: Sync Django database.
  shell: ${env_dir}/bin/python $project_root/ecgps/manage.py syncdb --migrate --noinput
  tags: deploy

- name: Do Django collectstatic to grab media files .
  shell: ${env_dir}/bin/python $project_root/ecgps/manage.py collectstatic --noinput
  tags: deploy

- name: Start redis-server
  action: service name=redis-server state=started enabled=yes
  tags: deploy, dev

- name: Change ownership of ecgps installation
  file: path=${project_root} owner=${user_name} group=${user_name} state=directory recurse=yes
  tags: deploy, dev



